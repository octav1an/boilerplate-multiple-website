upstream website_1 {
    # I used Docker containers that are connected to the same network
    # Normally you will just have different port for different services
    # 'website_1' is the name of the service from docker-compose
    server website_1:80;
}

upstream website_2 {
    server website_2:80;
}

server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    # Needed for SSL certificate issue
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name website_1.com;
    
    # Each website will have its own folder inside 'live' folder with ssl certs
    ssl_certificate /etc/nginx/ssl/live/website_1.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/website_1.com/privkey.pem;
    
    location / {
      # Reroute to correct service happens here
      proxy_pass http://website_1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name website_2.com;

    ssl_certificate /etc/nginx/ssl/live/website_2.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/website_2.com/privkey.pem;
    
    location / {
      proxy_pass http://website_2;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
}


